内存与IO访问

由于Linux系统提供了复杂的内存管理功能，所以内存的概念在Linux系统中相对复杂、有常规内存、高端内存、虚拟地址、

逻辑地址、 总线地址、物理地址、I/O内存、设备内存、预留内存。

11.1 讲解内存和I/O的硬件机制，主要涉及内存空间、I/O空间和MMU

11.2 讲解Linux的内存管理、内存区域、常规内存和高端内存的区别

11.3 讲解Linux内存存取的方法，主要涉及内存动态申请以及通过虚拟地址存取物理地址的方法。

11.4 讲解设备I/O端口和I/O内存的访问流程，这一节对于编写设备驱动的意义非常重大，设备驱动使用此节的方法访问物理设备

11.5 I/O 内存静态映射

11.6 讲解设备驱动中的DMA与Cache一致性问题以及DMA的编程方法



内存管理单元

MMU具有虚拟地址和物理地址转换、内存访问权限保护等功能，这将使得Linux操作系统能

单独为系统的每个用户进程分配独立的内存空间并保证用户空间不能访问内核空间的地址，为操作系统

的虚拟内存管理模块提供硬件基础

每个进程的用户空间都是完全独立，互不相干，用户进程有各自不同的页表。

内核空间是由内核负责映射，它并不会跟着进程改变，是固定的。


设备IO端口和IO内存访问

设备通常会提供一组寄存器控制设备、读写设备和获取设备状态，即控制寄存器、数据寄存器和状态寄存器。

这些寄存器可能位于IO空间中，也可能位于内存空间中。

位于IO空间是通常被称为IO端口，当位于内存空间时，对应的内存空间被称为IO内存。

IO内存
void * ioremap (unsigned long offset, unsigned long size);

ioremap() 与vmalloc() 类似，也需要建立新的页表










